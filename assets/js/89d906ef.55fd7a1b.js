"use strict";(self.webpackChunkgreen_software_training=self.webpackChunkgreen_software_training||[]).push([[169],{4137:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>d});var i=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,i,o=function(e,n){if(null==e)return{};var t,i,o={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=i.createContext({}),c=function(e){var n=i.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},u=function(e){var n=c(e.components);return i.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},m=i.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=c(t),d=o,f=m["".concat(l,".").concat(d)]||m[d]||p[d]||a;return t?i.createElement(f,r(r({ref:n},u),{},{components:t})):i.createElement(f,r({ref:n},u))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,r=new Array(a);r[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,r[1]=s;for(var c=2;c<a;c++)r[c]=t[c];return i.createElement.apply(null,r)}return i.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9595:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var i=t(7462),o=(t(7294),t(4137));const a={sidebar_position:6},r="Verifying IF outputs with `if-check`",s={unversionedId:"users/how-to-verify-files-with-if-check",id:"users/how-to-verify-files-with-if-check",title:"Verifying IF outputs with `if-check`",description:"IF includes a command line tool called if-check that can be used to verify the results in a manifest file.",source:"@site/docs/users/how-to-verify-files-with-if-check.md",sourceDirName:"users",slug:"/users/how-to-verify-files-with-if-check",permalink:"/users/how-to-verify-files-with-if-check",draft:!1,editUrl:"https://github.com/Green-Software-Foundation/if-docs/edit/master/docs/users/how-to-verify-files-with-if-check.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"How to compare files with `if-diff`",permalink:"/users/how-to-compare-files-with-if-diff"},next:{title:"Developers",permalink:"/developers/"}},l={},c=[{value:"Example",id:"example",level:2},{value:"Running IF over multiple manifests",id:"running-if-over-multiple-manifests",level:2},{value:"<code>if-check</code> limitations",id:"if-check-limitations",level:2}],u={toc:c};function p(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,i.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"verifying-if-outputs-with-if-check"},"Verifying IF outputs with ",(0,o.kt)("inlineCode",{parentName:"h1"},"if-check")),(0,o.kt)("p",null,"IF includes a command line tool called ",(0,o.kt)("inlineCode",{parentName:"p"},"if-check")," that can be used to verify the results in a manifest file."),(0,o.kt)("p",null,"Imagine that someone provides you with a computed manifest file that they claim demonstrates the environmental impact of their software application."),(0,o.kt)("p",null,"You could trust them and take their results at face value, but there are probably cases where you think someone might have made a mistake or might be massaging their data in a dishonest way. Maybe you just need to demonstrate due diligence in the quality of the data you receive and use. In these cases, you can make use of ",(0,o.kt)("inlineCode",{parentName:"p"},"if-check"),"."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"if-check")," is a single command that takes a given manifest file, sets up an environment where it can be executed, executes it, and compares the newly generated results to those in the original file. This means you can independently verify the results in the file using your own local copy of IF."),(0,o.kt)("p",null,"Under the hood, ",(0,o.kt)("inlineCode",{parentName:"p"},"if-check")," is wrapping calls to ",(0,o.kt)("inlineCode",{parentName:"p"},"if-env")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"if-diff"),", so if you need granular control over the information flow for some reason, you could achieve the same result using separate calls to those commands."),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("p",null,"Alice is a manifest verifier. She receives a manifest from Bob. Bob is a good actor and has provided a valid file. Alice is a good cypherpunk who verifies everything."),(0,o.kt)("p",null,"Here is Bob's manifest:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"name: bobs-manifest\ndescription:\ntags: null\ninitialize:\n  plugins:\n    sci:\n      path: builtin\n      method: Sci\n      global-config:\n        functional-unit: requests\nexecution:\n  command: >-\n    /home/bob/.npm/_npx/1bf7c3c15bf47d04/node_modules/.bin/ts-node\n    /home/bob/Code/if/src/index.ts -m manifests/plugins/sci/success.yml -s\n  environment:\n    if-version: 0.4.0\n    os: linux\n    os-version: 5.15.0-113-generic\n    node-version: 21.4.0\n    date-time: 2024-06-27T14:10:29.830Z (UTC)\n    dependencies:\n      - '@babel/core@7.22.10'\n      - '@babel/preset-typescript@7.23.3'\n      - '@commitlint/cli@18.6.0'\n      - '@commitlint/config-conventional@18.6.0'\n      - '@grnsft/if-core@0.0.9'\n      - '@jest/globals@29.7.0'\n      - '@types/jest@29.5.8'\n      - '@types/js-yaml@4.0.9'\n      - '@types/luxon@3.4.2'\n      - '@types/node@20.9.0'\n      - axios-mock-adapter@1.22.0\n      - axios@1.7.2\n      - cross-env@7.0.3\n      - csv-parse@5.5.6\n      - csv-stringify@6.4.6\n      - fixpack@4.0.0\n      - gts@5.2.0\n      - husky@8.0.3\n      - jest@29.7.0\n      - js-yaml@4.1.0\n      - lint-staged@15.2.2\n      - luxon@3.4.4\n      - release-it@16.3.0\n      - rimraf@5.0.5\n      - ts-command-line-args@2.5.1\n      - ts-jest@29.1.1\n      - typescript-cubic-spline@1.0.1\n      - typescript@5.2.2\n      - winston@3.11.0\n      - zod@3.22.4\n  status: success\ntree:\n  children:\n    child-1:\n      pipeline:\n        observe:\n        regroup:\n        compute:\n          - sci\n      config: null\n      inputs:\n        - timestamp: 2023-07-06T00:00\n          duration: 3600\n          energy: 5\n          carbon-operational: 5\n          carbon-embodied: 0.02\n          carbon: 5.02\n          requests: 100\n      outputs:\n        - timestamp: 2023-07-06T00:00\n          duration: 3600\n          energy: 5\n          carbon-operational: 5\n          carbon-embodied: 0.02\n          carbon: 5.02\n          requests: 100\n          sci: 0.050199999999999995\n    child-2:\n      pipeline:\n        observe:\n        regroup:\n        compute:\n          - sci\n      config: null\n      inputs:\n        - timestamp: 2023-07-06T00:00\n          duration: 3600\n          energy: 8\n          carbon-operational: 8\n          carbon-embodied: 0.02\n          carbon: 8.02\n          requests: 100\n      outputs:\n        - timestamp: 2023-07-06T00:00\n          duration: 3600\n          energy: 8\n          carbon-operational: 8\n          carbon-embodied: 0.02\n          carbon: 8.02\n          requests: 100\n          sci: 0.0802\n")),(0,o.kt)("p",null,"Alice runs :"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"if-check -m bobs-manifest.yml\n")),(0,o.kt)("p",null,"And receives the response:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"if-check: successfully verified bobs-manifest\n")),(0,o.kt)("p",null,"Charlie also has a copy of Bob's manifest. He wants to trick Alice into thinking his SCI score is lower, so he overwrites the values in the manifest file, making them lower. Charlie's manifest looks like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"# start\nname: charlies-manifest\ndescription:\ntags: null\ninitialize:\n  plugins:\n    sci:\n      path: builtin\n      method: Sci\n      global-config:\n        functional-unit: requests\nexecution:\n  command: >-\n    /home/charlie/.npm/_npx/1bf7c3c15bf47d04/node_modules/.bin/ts-node\n    /home/charlie/Code/if/src/index.ts -m manifests/plugins/sci/success.yml -s\n  environment:\n    if-version: 0.4.0\n    os: linux\n    os-version: 5.15.0-113-generic\n    node-version: 21.4.0\n    date-time: 2024-06-27T14:10:29.830Z (UTC)\n    dependencies:\n      - '@babel/core@7.22.10'\n      - '@babel/preset-typescript@7.23.3'\n      - '@commitlint/cli@18.6.0'\n      - '@commitlint/config-conventional@18.6.0'\n      - '@grnsft/if-core@0.0.9'\n      - '@jest/globals@29.7.0'\n      - '@types/jest@29.5.8'\n      - '@types/js-yaml@4.0.9'\n      - '@types/luxon@3.4.2'\n      - '@types/node@20.9.0'\n      - axios-mock-adapter@1.22.0\n      - axios@1.7.2\n      - cross-env@7.0.3\n      - csv-parse@5.5.6\n      - csv-stringify@6.4.6\n      - fixpack@4.0.0\n      - gts@5.2.0\n      - husky@8.0.3\n      - jest@29.7.0\n      - js-yaml@4.1.0\n      - lint-staged@15.2.2\n      - luxon@3.4.4\n      - release-it@16.3.0\n      - rimraf@5.0.5\n      - ts-command-line-args@2.5.1\n      - ts-jest@29.1.1\n      - typescript-cubic-spline@1.0.1\n      - typescript@5.2.2\n      - winston@3.11.0\n      - zod@3.22.4\n  status: success\ntree:\n  children:\n    child-1:\n      pipeline:\n        observe:\n        regroup:\n        compute:\n          - sci\n      config: null\n      inputs:\n        - timestamp: 2023-07-06T00:00\n          duration: 3600\n          energy: 5\n          carbon-operational: 5\n          carbon-embodied: 0.02\n          carbon: 5.02\n          requests: 100\n      outputs:\n        - timestamp: 2023-07-06T00:00\n          duration: 3600\n          energy: 5\n          carbon-operational: 5\n          carbon-embodied: 0.02\n          carbon: 5.02\n          requests: 100\n          sci: 0.020199999999999995\n    child-2:\n      pipeline:\n        observe:\n        regroup:\n        compute:\n          - sci\n      config: null\n      inputs:\n        - timestamp: 2023-07-06T00:00\n          duration: 3600\n          energy: 8\n          carbon-operational: 8\n          carbon-embodied: 0.02\n          carbon: 8.02\n          requests: 100\n      outputs:\n        - timestamp: 2023-07-06T00:00\n          duration: 3600\n          energy: 8\n          carbon-operational: 8\n          carbon-embodied: 0.02\n          carbon: 8.02\n          requests: 100\n          sci: 0.0102\n")),(0,o.kt)("p",null,"Now, when Alice runs ",(0,o.kt)("inlineCode",{parentName:"p"},"if-check -m charlies-manifest"),", she receives:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"if-check could not verify charlies-manifest. The re-executed file does not match the original.\n\nFiles do not match!\ntree.children.child-1.outputs.0.sci\nsource: 0.050199999999999995\ntarget: 0.020199999999999995\n")),(0,o.kt)("p",null,"Not only can Alice see that the files do not match, she can see which values Charlie manipulated."),(0,o.kt)("h2",{id:"running-if-over-multiple-manifests"},"Running IF over multiple manifests"),(0,o.kt)("p",null,"Alice could also run ",(0,o.kt)("inlineCode",{parentName:"p"},"if-check")," over any number of manifests in a single command, using the ",(0,o.kt)("inlineCode",{parentName:"p"},"-d")," subcommand. For a folder containing ",(0,o.kt)("inlineCode",{parentName:"p"},"n")," manifests, pass the folder path:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"if-check -d /my-folder-of-manifests\n")),(0,o.kt)("p",null,"Each manifest will be run through ",(0,o.kt)("inlineCode",{parentName:"p"},"if-check")," in sequence."),(0,o.kt)("h2",{id:"if-check-limitations"},(0,o.kt)("inlineCode",{parentName:"h2"},"if-check")," limitations"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"if-check")," can verify that a manifest is correctly calculated. However, if someone really wanted to use a fraudulent manifest, they could provide fraudulent ",(0,o.kt)("em",{parentName:"p"},"input")," data not ",(0,o.kt)("em",{parentName:"p"},"output")," data. There's little we can really do about this - if someone provides fake input data it is out of IF's remit. This means that although the examples above are good for demonstrating how ",(0,o.kt)("inlineCode",{parentName:"p"},"if-check")," works, it's more likely to be used to check for bugs and configuration errors than it is to be used to detect fraud."))}p.isMDXComponent=!0}}]);