"use strict";(self.webpackChunkgreen_software_training=self.webpackChunkgreen_software_training||[]).push([[3947],{4137:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),u=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=u(n),g=r,d=m["".concat(o,".").concat(g)]||m[g]||p[g]||l;return n?a.createElement(d,i(i({ref:t},c),{},{components:n})):a.createElement(d,i({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=m;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var u=2;u<l;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},76:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>s,toc:()=>u});var a=n(7462),r=(n(7294),n(4137));const l={sidebar_position:11},i="How to deploy Impact Framework to Kubernetes",s={unversionedId:"users/how-to-deploy-to-kubernetes",id:"users/how-to-deploy-to-kubernetes",title:"How to deploy Impact Framework to Kubernetes",description:"The Impact Framework provides a Helm chart for easy deployment on Kubernetes clusters, making it simple to run the API server in containerized environments.",source:"@site/docs/users/how-to-deploy-to-kubernetes.md",sourceDirName:"users",slug:"/users/how-to-deploy-to-kubernetes",permalink:"/users/how-to-deploy-to-kubernetes",draft:!1,editUrl:"https://github.com/Green-Software-Foundation/if-docs/edit/master/docs/users/how-to-deploy-to-kubernetes.md",tags:[],version:"current",sidebarPosition:11,frontMatter:{sidebar_position:11},sidebar:"tutorialSidebar",previous:{title:"How to build custom container images",permalink:"/users/how-to-build-container-images"},next:{title:"Developers",permalink:"/developers/"}},o={},u=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Quick Start",id:"quick-start",level:2},{value:"Basic Deployment",id:"basic-deployment",level:3},{value:"Verify Deployment",id:"verify-deployment",level:3},{value:"Accessing the API Server",id:"accessing-the-api-server",level:2},{value:"External Access via Port Forward",id:"external-access-via-port-forward",level:3},{value:"External Access via NodePort",id:"external-access-via-nodeport",level:3},{value:"External Access via LoadBalancer",id:"external-access-via-loadbalancer",level:3},{value:"External Access via Ingress",id:"external-access-via-ingress",level:3},{value:"Plugin Management",id:"plugin-management",level:2},{value:"Installing External Plugins",id:"installing-external-plugins",level:3},{value:"Installing Private Packages",id:"installing-private-packages",level:3},{value:"Installing from GitHub Packages",id:"installing-from-github-packages",level:3},{value:"Using Environment Variables for Tokens",id:"using-environment-variables-for-tokens",level:3},{value:"Using Custom Container Images",id:"using-custom-container-images",level:3},{value:"Security Configuration",id:"security-configuration",level:2},{value:"Enabling Disabled Plugins",id:"enabling-disabled-plugins",level:3},{value:"Other Configurations",id:"other-configurations",level:2},{value:"Resource Limits",id:"resource-limits",level:3},{value:"Replica Count",id:"replica-count",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Pod Startup Issues",id:"pod-startup-issues",level:3},{value:"Plugin Installation Failures",id:"plugin-installation-failures",level:3},{value:"API Server Access Issues",id:"api-server-access-issues",level:3}],c={toc:u};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"how-to-deploy-impact-framework-to-kubernetes"},"How to deploy Impact Framework to Kubernetes"),(0,r.kt)("p",null,"The Impact Framework provides a Helm chart for easy deployment on Kubernetes clusters, making it simple to run the API server in containerized environments."),(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("p",null,"Before deploying to Kubernetes, ensure you have:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A running Kubernetes cluster"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"kubectl")," configured to access your cluster"),(0,r.kt)("li",{parentName:"ul"},"Helm 3.x installed"),(0,r.kt)("li",{parentName:"ul"},"Appropriate permissions to deploy resources in your namespace")),(0,r.kt)("h2",{id:"quick-start"},"Quick Start"),(0,r.kt)("h3",{id:"basic-deployment"},"Basic Deployment"),(0,r.kt)("p",null,"The Helm chart is provided in OCI format on GitHub Container Registry. Deploy with default settings:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"$ helm install if oci://ghcr.io/green-software-foundation/charts/if\n")),(0,r.kt)("p",null,"This creates:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A Deployment running the IF API server"),(0,r.kt)("li",{parentName:"ul"},"A ClusterIP Service for internal cluster access"),(0,r.kt)("li",{parentName:"ul"},"Optional ConfigMaps for configuration"),(0,r.kt)("li",{parentName:"ul"},"Optional Secrets for authentication")),(0,r.kt)("h3",{id:"verify-deployment"},"Verify Deployment"),(0,r.kt)("p",null,"Check that the deployment is running:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"$ kubectl get pods -l app.kubernetes.io/name=if\n$ kubectl get services -l app.kubernetes.io/name=if\n")),(0,r.kt)("h2",{id:"accessing-the-api-server"},"Accessing the API Server"),(0,r.kt)("p",null,"By default, a ",(0,r.kt)("inlineCode",{parentName:"p"},"ClusterIP")," service is deployed for internal cluster communication. To access the API Server from the outside, it must be accessed by one of the following methods"),(0,r.kt)("h3",{id:"external-access-via-port-forward"},"External Access via Port Forward"),(0,r.kt)("p",null,"For development and testing, use port forwarding:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'$ kubectl port-forward svc/if 3000:3000 &\n$ curl -H "Content-Type: application/yaml" --data-binary @manifest.yaml http://localhost:3000/v1/run\n')),(0,r.kt)("h3",{id:"external-access-via-nodeport"},"External Access via NodePort"),(0,r.kt)("p",null,"For external access without load balancers, use NodePort:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"# values-nodeport.yaml\nservice:\n  type: NodePort\n  nodePort: 32000\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"$ helm upgrade if oci://ghcr.io/green-software-foundation/charts/if -f values-nodeport.yaml\n")),(0,r.kt)("p",null,"Access the service at ",(0,r.kt)("inlineCode",{parentName:"p"},"http://<node-ip>:32000")),(0,r.kt)("h3",{id:"external-access-via-loadbalancer"},"External Access via LoadBalancer"),(0,r.kt)("p",null,"For production external access, use LoadBalancer:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"# values-loadbalancer.yaml\nservice:\n  type: LoadBalancer\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"$ helm upgrade if oci://ghcr.io/green-software-foundation/charts/if -f values-loadbalancer.yaml\n")),(0,r.kt)("p",null,"Get the external IP:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"$ kubectl get services if\n")),(0,r.kt)("h3",{id:"external-access-via-ingress"},"External Access via Ingress"),(0,r.kt)("p",null,"Expose the service via Ingress:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"# values-ingress.yaml\ningress:\n  enabled: true\n  className: nginx\n  annotations:\n    cert-manager.io/cluster-issuer: letsencrypt-prod\n  hosts:\n    - host: if.example.com\n      paths:\n        - path: /\n          pathType: Prefix\n  tls:\n    - secretName: if-tls\n      hosts:\n        - if.example.com\n")),(0,r.kt)("p",null,"Refer to the respective Ingress Controller documentation for Ingress configuration."),(0,r.kt)("h2",{id:"plugin-management"},"Plugin Management"),(0,r.kt)("h3",{id:"installing-external-plugins"},"Installing External Plugins"),(0,r.kt)("p",null,"Add external plugins that will be installed at pod startup:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"# values-plugins.yaml\nadditionalPlugins:\n  - carbon-intensity-plugin\n  - Green-Software-Foundation/if-github-plugin\n")),(0,r.kt)("h3",{id:"installing-private-packages"},"Installing Private Packages"),(0,r.kt)("p",null,"For private plugins from npm registry, configure authentication:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'# values-private-plugins.yaml\nadditionalPlugins:\n  - "@myscope/myplugin"\n\nnpmrc: |\n  //registry.npmjs.org/:_authToken=<YOUR_AUTH_TOKEN>\n  @myscope:registry=https://registry.npmjs.org/\n')),(0,r.kt)("h3",{id:"installing-from-github-packages"},"Installing from GitHub Packages"),(0,r.kt)("p",null,"For packages in GitHub Packages, a personal access token (classic) with ",(0,r.kt)("inlineCode",{parentName:"p"},"read:packages")," permission is required even for public packages:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"# values-github-packages.yaml\nadditionalPlugins:\n  - Green-Software-Foundation/community-plugins\n  - danuw/if-casdk-plugin\n\nnpmrc: |\n  //npm.pkg.github.com/:_authToken=<YOUR_PERSONAL_ACCESS_TOKEN>\n  @Green-Software-Foundation:registry=https://npm.pkg.github.com/\n")),(0,r.kt)("h3",{id:"using-environment-variables-for-tokens"},"Using Environment Variables for Tokens"),(0,r.kt)("p",null,"Extract tokens to environment variables for better security:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"# values-env-auth.yaml\nadditionalPlugins:\n  - Green-Software-Foundation/community-plugins\n\nnpmrc: |\n  //npm.pkg.github.com/:_authToken=${GITHUB_TOKEN}\n  @Green-Software-Foundation:registry=https://npm.pkg.github.com/\n\nenv:\n  secret:\n    GITHUB_TOKEN: <YOUR_PERSONAL_ACCESS_TOKEN>\n")),(0,r.kt)("h3",{id:"using-custom-container-images"},"Using Custom Container Images"),(0,r.kt)("p",null,"For faster startup, use custom images with pre-installed plugins:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"# values-custom-image.yaml\nimage:\n  repository: myorg/if-with-plugins\n  tag: v1.0.0\n\n# Disable plugin installation since they're pre-installed\nadditionalPlugins: []\n")),(0,r.kt)("p",null,"For custom image creation, see the ",(0,r.kt)("a",{parentName:"p",href:"/users/how-to-build-container-images"},"How to build custom container images"),"."),(0,r.kt)("h2",{id:"security-configuration"},"Security Configuration"),(0,r.kt)("h3",{id:"enabling-disabled-plugins"},"Enabling Disabled Plugins"),(0,r.kt)("p",null,"By default, certain plugins are disabled for security. Enable them if needed:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"# values-all-plugins.yaml\ndisabledPlugins: []  # Enable all builtin plugins\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Security Warning"),": The Shell, CSVImport, and CSVLookup plugins can access the filesystem and execute commands. Only enable in trusted environments.")),(0,r.kt)("h2",{id:"other-configurations"},"Other Configurations"),(0,r.kt)("h3",{id:"resource-limits"},"Resource Limits"),(0,r.kt)("p",null,"Configure CPU and memory limits for production:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"# values-production.yaml\nresources:\n  limits:\n    cpu: 1000m\n    memory: 512Mi\n  requests:\n    cpu: 100m\n    memory: 128Mi\n")),(0,r.kt)("h3",{id:"replica-count"},"Replica Count"),(0,r.kt)("p",null,"Scale the deployment for high availability:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"# values-ha.yaml\nreplicaCount: 3\n\n# Optional: Pod disruption budget\npodDisruptionBudget:\n  enabled: true\n  minAvailable: 2\n")),(0,r.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,r.kt)("h3",{id:"pod-startup-issues"},"Pod Startup Issues"),(0,r.kt)("p",null,"If pods fail to start:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"If using a custom image, verify the image can be pulled correctly."),(0,r.kt)("li",{parentName:"ol"},"Check pod logs for any error messages.")),(0,r.kt)("h3",{id:"plugin-installation-failures"},"Plugin Installation Failures"),(0,r.kt)("p",null,"If plugin installation fails:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Verify the plugin name is correct."),(0,r.kt)("li",{parentName:"ol"},"If installing plugins from Git repositories, ensure you're using a container image with git installed."),(0,r.kt)("li",{parentName:"ol"},"If installing private plugins or plugins published to GitHub Packages, verify the npmrc configuration is correct.")),(0,r.kt)("h3",{id:"api-server-access-issues"},"API Server Access Issues"),(0,r.kt)("p",null,"If you cannot access the API server:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Verify the service is properly exposed."),(0,r.kt)("li",{parentName:"ol"},"Verify the access URL is correct."),(0,r.kt)("li",{parentName:"ol"},"Verify the Content-Type is correct.")))}p.isMDXComponent=!0}}]);