"use strict";(self.webpackChunkgreen_software_training=self.webpackChunkgreen_software_training||[]).push([[862],{4137:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>d});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=a.createContext({}),p=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=p(e.components);return a.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(t),d=i,g=m["".concat(l,".").concat(d)]||m[d]||u[d]||r;return t?a.createElement(g,o(o({ref:n},c),{},{components:t})):a.createElement(g,o({ref:n},c))}));function d(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,o=new Array(r);o[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var p=2;p<r;p++)o[p]=t[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},4354:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var a=t(7462),i=(t(7294),t(4137));const r={sidebar_position:9},o="How to use Impact Framework with Docker containers",s={unversionedId:"users/how-to-use-containers",id:"users/how-to-use-containers",title:"How to use Impact Framework with Docker containers",description:"The Impact Framework API server can be run as a Docker container, making it easy to deploy in containerized environments.",source:"@site/docs/users/how-to-use-containers.md",sourceDirName:"users",slug:"/users/how-to-use-containers",permalink:"/users/how-to-use-containers",draft:!1,editUrl:"https://github.com/Green-Software-Foundation/if-docs/edit/master/docs/users/how-to-use-containers.md",tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9},sidebar:"tutorialSidebar",previous:{title:"Verifying IF outputs with `if-check`",permalink:"/users/how-to-verify-files-with-if-check"},next:{title:"How to build custom container images",permalink:"/users/how-to-build-container-images"}},l={},p=[{value:"Official Container Image",id:"official-container-image",level:2},{value:"Running the Container",id:"running-the-container",level:2},{value:"Basic Usage",id:"basic-usage",level:3},{value:"Running with Command Arguments",id:"running-with-command-arguments",level:3},{value:"Using the Containerized API Server",id:"using-the-containerized-api-server",level:2},{value:"Adding External Plugins at Startup",id:"adding-external-plugins-at-startup",level:2},{value:"Installing Public npm Packages",id:"installing-public-npm-packages",level:3},{value:"Installing Private Packages",id:"installing-private-packages",level:3},{value:"Installing from GitHub Packages",id:"installing-from-github-packages",level:3},{value:"Using Environment Variables for Tokens",id:"using-environment-variables-for-tokens",level:3},{value:"Running Other Commands",id:"running-other-commands",level:2},{value:"Security Considerations",id:"security-considerations",level:2},{value:"Custom Container Images",id:"custom-container-images",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Plugin Installation Issues",id:"plugin-installation-issues",level:3},{value:"Network Connectivity",id:"network-connectivity",level:3}],c={toc:p};function u(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"how-to-use-impact-framework-with-docker-containers"},"How to use Impact Framework with Docker containers"),(0,i.kt)("p",null,"The Impact Framework API server can be run as a Docker container, making it easy to deploy in containerized environments."),(0,i.kt)("h2",{id:"official-container-image"},"Official Container Image"),(0,i.kt)("p",null,"The official container image is provided at ",(0,i.kt)("inlineCode",{parentName:"p"},"ghcr.io/green-software-foundation/if"),"."),(0,i.kt)("h2",{id:"running-the-container"},"Running the Container"),(0,i.kt)("h3",{id:"basic-usage"},"Basic Usage"),(0,i.kt)("p",null,"Run a container using the official image:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"# Run with default port (3000)\n$ docker run --rm -p 3000:3000 ghcr.io/green-software-foundation/if\n\n# Run with custom port mapping\n$ docker run --rm -p 8080:3000 ghcr.io/green-software-foundation/if\n")),(0,i.kt)("h3",{id:"running-with-command-arguments"},"Running with Command Arguments"),(0,i.kt)("p",null,"When specifying arguments for the ",(0,i.kt)("inlineCode",{parentName:"p"},"if-api")," command, you need to include the ",(0,i.kt)("inlineCode",{parentName:"p"},"if-api")," command as shown below:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"# Run without external plugin warning\n$ docker run --rm -p 3000:3000 ghcr.io/green-software-foundation/if if-api --disableExternalPluginWarning\n\n# Run with custom host and port\n$ docker run --rm -p 8080:3000 ghcr.io/green-software-foundation/if if-api --host 0.0.0.0 --port 3000\n")),(0,i.kt)("h2",{id:"using-the-containerized-api-server"},"Using the Containerized API Server"),(0,i.kt)("p",null,"The containerized API server provides the same endpoints as the regular API server:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},'# Process manifest\n$ curl -H "Content-Type: application/yaml" --data-binary @manifest.yaml http://localhost:3000/v1/run\n\n# Health check endpoint\n$ curl http://localhost:3000/health\n')),(0,i.kt)("h2",{id:"adding-external-plugins-at-startup"},"Adding External Plugins at Startup"),(0,i.kt)("p",null,"You can add external plugins at container startup by mounting a file that lists the plugins to ",(0,i.kt)("inlineCode",{parentName:"p"},"/app/plugins.txt"),"."),(0,i.kt)("h3",{id:"installing-public-npm-packages"},"Installing Public npm Packages"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"$ cat plugins.txt\ncarbon-intensity-plugin\n@company/my-plugin\n\n$ docker run --rm -p 3000:3000 -v $(pwd)/plugins.txt:/app/plugins.txt ghcr.io/green-software-foundation/if\n")),(0,i.kt)("p",null,"The contents of ",(0,i.kt)("inlineCode",{parentName:"p"},"/app/plugins.txt")," are used directly as arguments for ",(0,i.kt)("inlineCode",{parentName:"p"},"npm install"),". For available formats, refer to the ",(0,i.kt)("a",{parentName:"p",href:"https://docs.npmjs.com/cli/v8/commands/npm-install"},"npm install documentation"),"."),(0,i.kt)("h3",{id:"installing-private-packages"},"Installing Private Packages"),(0,i.kt)("p",null,"If the plugin or its dependencies are private, mount an ",(0,i.kt)("inlineCode",{parentName:"p"},".npmrc")," file at ",(0,i.kt)("inlineCode",{parentName:"p"},"/app/.npmrc")," with the required access token:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"$ cat plugins.txt\n@myscope/myplugin\n\n$ cat .npmrc\n//registry.npmjs.org/:_authToken=<YOUR_AUTH_TOKEN>\n@myscope:registry=https://registry.npmjs.org/\n\n$ docker run --rm -p 3000:3000 \\\n  -v $(pwd)/plugins.txt:/app/plugins.txt \\\n  -v $(pwd)/.npmrc:/app/.npmrc \\\n  ghcr.io/green-software-foundation/if\n")),(0,i.kt)("p",null,"For ",(0,i.kt)("inlineCode",{parentName:"p"},".npmrc")," format reference, see the ",(0,i.kt)("a",{parentName:"p",href:"https://docs.npmjs.com/cli/v8/configuring-npm/npmrc"},"npmrc documentation"),"."),(0,i.kt)("h3",{id:"installing-from-github-packages"},"Installing from GitHub Packages"),(0,i.kt)("p",null,"For packages in GitHub Packages, a personal access token (classic) with ",(0,i.kt)("inlineCode",{parentName:"p"},"read:packages")," permission is required even for public packages:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"$ cat plugins.txt\ndanuw/if-casdk-plugin\n\n$ cat .npmrc\n//npm.pkg.github.com/:_authToken=<YOUR_PERSONAL_ACCESS_TOKEN>\n@Green-Software-Foundation:registry=https://npm.pkg.github.com/\n\n$ docker run --rm -p 3000:3000 \\\n  -v $(pwd)/plugins.txt:/app/plugins.txt \\\n  -v $(pwd)/.npmrc:/app/.npmrc \\\n  ghcr.io/green-software-foundation/if\n")),(0,i.kt)("h3",{id:"using-environment-variables-for-tokens"},"Using Environment Variables for Tokens"),(0,i.kt)("p",null,"Alternatively, you can extract the access token to an environment variable (though this is not recommended for security reasons):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"$ cat plugins.txt\n@myscope/myplugin\n\n$ cat .npmrc\n//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}\n@myscope:registry=https://registry.npmjs.org/\n\n$ docker run --rm -p 3000:3000 \\\n  -v $(pwd)/plugins.txt:/app/plugins.txt \\\n  -v $(pwd)/.npmrc:/app/.npmrc \\\n  -e NODE_AUTH_TOKEN=<YOUR_AUTH_TOKEN> \\\n  ghcr.io/green-software-foundation/if\n")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"Security Note"),": Using environment variables for tokens is not recommended as they can easily leak through ",(0,i.kt)("inlineCode",{parentName:"p"},"ps")," commands, ",(0,i.kt)("inlineCode",{parentName:"p"},"/proc")," filesystem, memory dumps, etc.")),(0,i.kt)("h2",{id:"running-other-commands"},"Running Other Commands"),(0,i.kt)("p",null,"The container can execute IF commands other than the API server:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"# Run if-run command\n$ docker run --rm -v $(pwd)/manifest.yaml:/app/manifest.yaml \\\n  ghcr.io/green-software-foundation/if if-run -m manifest.yaml\n\n# Run if-check command\n$ docker run --rm -v $(pwd)/manifest.yaml:/app/manifest.yaml \\\n  ghcr.io/green-software-foundation/if if-check -m manifest.yaml\n\n# Run if-diff command\n$ docker run --rm \\\n  -v $(pwd)/manifest1.yaml:/app/manifest1.yaml \\\n  -v $(pwd)/manifest2.yaml:/app/manifest2.yaml \\\n  ghcr.io/green-software-foundation/if if-diff -s manifest1.yaml -t manifest2.yaml\n")),(0,i.kt)("h2",{id:"security-considerations"},"Security Considerations"),(0,i.kt)("p",null,"For security reasons, certain builtin plugins are disabled by default in the API server:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Shell")," - Prevents arbitrary command execution"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"CSVImport")," - Prevents reading arbitrary files"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"CSVLookup")," - Prevents reading arbitrary files")),(0,i.kt)("p",null,"These plugins can be enabled if needed, but should be used with caution in production environments."),(0,i.kt)("h2",{id:"custom-container-images"},"Custom Container Images"),(0,i.kt)("p",null,"If you need to build custom container images with pre-installed plugins for faster startup times, or want to create optimized images for your specific use case, see the ",(0,i.kt)("a",{parentName:"p",href:"/users/how-to-build-container-images"},"developer documentation for building container images"),"."),(0,i.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,i.kt)("h3",{id:"plugin-installation-issues"},"Plugin Installation Issues"),(0,i.kt)("p",null,"If external plugins fail to install:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Check that the plugin name is correct in ",(0,i.kt)("inlineCode",{parentName:"li"},"plugins.txt")),(0,i.kt)("li",{parentName:"ol"},"Verify authentication tokens in ",(0,i.kt)("inlineCode",{parentName:"li"},".npmrc")," if accessing private packages"),(0,i.kt)("li",{parentName:"ol"},"Ensure the plugin is compatible with the IF version in the container"),(0,i.kt)("li",{parentName:"ol"},"Check container logs for detailed error messages")),(0,i.kt)("h3",{id:"network-connectivity"},"Network Connectivity"),(0,i.kt)("p",null,"If the API server is not accessible:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Verify port mapping is correct (",(0,i.kt)("inlineCode",{parentName:"li"},"-p host:container"),")"),(0,i.kt)("li",{parentName:"ol"},"Check that the container is listening on ",(0,i.kt)("inlineCode",{parentName:"li"},"0.0.0.0")," not just ",(0,i.kt)("inlineCode",{parentName:"li"},"localhost")),(0,i.kt)("li",{parentName:"ol"},"Ensure firewall rules allow traffic on the specified port")))}u.isMDXComponent=!0}}]);