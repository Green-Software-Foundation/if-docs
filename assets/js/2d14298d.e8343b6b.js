"use strict";(self.webpackChunkgreen_software_training=self.webpackChunkgreen_software_training||[]).push([[754],{4137:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>c});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(n),c=a,h=d["".concat(s,".").concat(c)]||d[c]||m[c]||i;return n?r.createElement(h,o(o({ref:t},u),{},{components:n})):r.createElement(h,o({ref:t},u))}));function c(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9406:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=n(7462),a=(n(7294),n(4137));const i={"sidebar-position":4},o="How to visualize results",l={unversionedId:"developers/how-to-visualize-results",id:"developers/how-to-visualize-results",title:"How to visualize results",description:"(for any questions / help needed on IF visualization please raise an issue here: IF issues)",source:"@site/docs/developers/how-to-visualize-results.md",sourceDirName:"developers",slug:"/developers/how-to-visualize-results",permalink:"/developers/how-to-visualize-results",draft:!1,editUrl:"https://github.com/Green-Software-Foundation/ief/docs/developers/how-to-visualize-results.md",tags:[],version:"current",frontMatter:{"sidebar-position":4},sidebar:"tutorialSidebar",previous:{title:"How to make models production ready",permalink:"/developers/how-to-refine-plugins"},next:{title:"How to write unit tests",permalink:"/developers/how-to-write-unit-tests"}},s={},p=[{value:"Simple HTML Exporter plugin",id:"simple-html-exporter-plugin",level:2},{value:"Input",id:"input",level:3},{value:"Output",id:"output",level:3},{value:"Example impl",id:"example-impl",level:3},{value:"Visualization example",id:"visualization-example",level:3},{value:"Grafana",id:"grafana",level:2},{value:"Visualization example",id:"visualization-example-1",level:3}],u={toc:p};function m(e){let{components:t,...i}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"how-to-visualize-results"},"How to visualize results"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"(for any questions / help needed on IF visualization please raise an issue here: ",(0,a.kt)("a",{parentName:"em",href:"https://github.com/Green-Software-Foundation/if/issues"},"IF issues"),")")),(0,a.kt)("p",null,"There are currently 2 ways to visualize Impact Framework outputs:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Using the ",(0,a.kt)("strong",{parentName:"li"},"Simple HTML Exporter plugin"),"."),(0,a.kt)("li",{parentName:"ol"},"Using ",(0,a.kt)("strong",{parentName:"li"},"Grafana"),".")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Grafana")," is the more standardized method for visualization. It also provides much more control over what's being visualized and how. Nevertheless, it requires some setting up."),(0,a.kt)("p",null,"Using the ",(0,a.kt)("strong",{parentName:"p"},"Simple HTML Exporter plugin")," is much simpler as it only requires a single configuration in the manifest yml file. However, it only supports visualization of Energy and Carbon values over time.\nIf you need to visualize other output parameters you can either use ",(0,a.kt)("strong",{parentName:"p"},"Grafana")," or alternatively enhance the ",(0,a.kt)("strong",{parentName:"p"},"Simple HTML Exporter plugin")," to be a bit less simple..."),(0,a.kt)("h2",{id:"simple-html-exporter-plugin"},"Simple HTML Exporter plugin"),(0,a.kt)("h3",{id:"input"},"Input"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"energy"),"[kWh]",", ",(0,a.kt)("inlineCode",{parentName:"p"},"carbon"),"[gCO2]"," and ",(0,a.kt)("inlineCode",{parentName:"p"},"timestamp")," should be included in the input array items."),(0,a.kt)("h3",{id:"output"},"Output"),(0,a.kt)("p",null,'This plugin acts as a relay, returning the input as-is, with the generated HTML acting as a "side effect".'),(0,a.kt)("h3",{id:"example-impl"},"Example impl"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"name: simple-html-exporter-demo\ndescription:\ntags:\ninitialize:\n  models:\n    - name: simple-html-exporter\n      model: SimpleHtmlExporter\n      path: \"@grnsft/if-models\"\ngraph:\n  children:\n    child:\n      pipeline:\n        - simple-html-exporter\n      config:\n        simple-html-exporter:\n          html-path: /usr/local/data/html-export.html\n      inputs:\n        - timestamp: '2021-01-01T00:00:00Z',\n          energy: 0.00001841,\n          carbon: 0.0104062,\n")),(0,a.kt)("h3",{id:"visualization-example"},"Visualization example"),(0,a.kt)("p",null,"The resulting HTML file can then be viewed using a web-browser"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"img.png",src:n(231).Z,width:"1912",height:"688"})),(0,a.kt)("h2",{id:"grafana"},"Grafana"),(0,a.kt)("p",null,"(See also ",(0,a.kt)("a",{parentName:"p",href:"https://grafana.com/"},"https://grafana.com/"),")"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Grafana")," is an open source analytics & monitoring solution for every database."),(0,a.kt)("p",null,"One of its main features is the ability to create dashboards with various types of data visualizations."),(0,a.kt)("p",null,"Please follow these instructions ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Green-Software-Foundation/if/blob/dev/grafana/IF_GRAFANA_SETUP.md"},"here")," to set up a ",(0,a.kt)("strong",{parentName:"p"},"Grafana")," dashboard."),(0,a.kt)("p",null,"This method requires converting the resulting output yml into a CSV. The standard way to do so would be to use the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Green-Software-Foundation/if-models/tree/main/src/lib/csv-export"},"CSV export")," plugin."),(0,a.kt)("h3",{id:"visualization-example-1"},"Visualization example"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"img.png",src:n(3127).Z,width:"1087",height:"671"})))}m.isMDXComponent=!0},3127:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/grafana-sample-396404157784310b5e568dd13bbcf331.png"},231:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/simple-html-exporter-sample-436d438eb2d013fcac5d65256656ea4b.png"}}]);