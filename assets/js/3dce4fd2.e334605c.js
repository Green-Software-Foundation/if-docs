"use strict";(self.webpackChunkgreen_software_training=self.webpackChunkgreen_software_training||[]).push([[278],{4137:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),f=p(n),m=i,d=f["".concat(l,".").concat(m)]||f[m]||u[m]||o;return n?r.createElement(d,a(a({ref:t},c),{},{components:n})):r.createElement(d,a({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var p=2;p<o;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},7677:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var r=n(7462),i=(n(7294),n(4137));const o={sidebar_position:6},a=void 0,s={unversionedId:"users/how-to-export-csv-file-with-if-csv",id:"users/how-to-export-csv-file-with-if-csv",title:"how-to-export-csv-file-with-if-csv",description:"Exporting CSV file with if-csv",source:"@site/docs/users/how-to-export-csv-file-with-if-csv.md",sourceDirName:"users",slug:"/users/how-to-export-csv-file-with-if-csv",permalink:"/users/how-to-export-csv-file-with-if-csv",draft:!1,editUrl:"https://github.com/Green-Software-Foundation/if-docs/edit/master/docs/users/how-to-export-csv-file-with-if-csv.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"How to compare files with `if-diff`",permalink:"/users/how-to-compare-files-with-if-diff"},next:{title:"how-to-verify-files-with-if-check",permalink:"/users/how-to-verify-files-with-if-check"}},l={},p=[{value:"Exporting CSV file with <code>if-csv</code>",id:"exporting-csv-file-with-if-csv",level:2},{value:"Example:",id:"example",level:2}],c={toc:p};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"exporting-csv-file-with-if-csv"},"Exporting CSV file with ",(0,i.kt)("inlineCode",{parentName:"h2"},"if-csv")),(0,i.kt)("p",null,"IF includes a command line tool called ",(0,i.kt)("inlineCode",{parentName:"p"},"if-csv")," which is designed to export CSV files based on a specified manifest file and metric."),(0,i.kt)("h2",{id:"example"},"Example:"),(0,i.kt)("p",null,"Let's execute this manifest file. This manifest simply sums two components, ",(0,i.kt)("inlineCode",{parentName:"p"},"cpu/energy")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"network/energy")," and assigns the result to ",(0,i.kt)("inlineCode",{parentName:"p"},"energy")," in the outputs array."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'name: sum\ndescription: successful path\ntags:\ninitialize:\n  plugins:\n    sum:\n      method: Sum\n      path: "builtin"\n      global-config:\n        input-parameters: ["cpu/energy", "network/energy"]\n        output-parameter: "energy"\ntree:\n  children:\n    child:\n      pipeline:\n        - sum\n      config:\n        sum:\n      inputs:\n        - timestamp: 2023-08-06T00:00\n          duration: 3600\n          cpu/energy: 0.001\n          network/energy: 0.001\n')),(0,i.kt)("p",null,"To generate a CSV file in the provided path, run the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"if-csv -m ./manifest.yaml -p energy -o ./output-manifest\n")),(0,i.kt)("p",null,"To print data in the console, you need to run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"if-csv -m ./manifest.yaml -p energy\n")),(0,i.kt)("p",null,"The output will be:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"Path,2023-08-06T00:00\ntree.children.child.energy,0.002\n")),(0,i.kt)("p",null,"Alternatively, you can pipe the result from ",(0,i.kt)("inlineCode",{parentName:"p"},"if-run"),". "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"if-run -m ./manifest.yaml | if-csv -p energy\n")))}u.isMDXComponent=!0}}]);