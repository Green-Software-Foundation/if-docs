"use strict";(self.webpackChunkgreen_software_training=self.webpackChunkgreen_software_training||[]).push([[3642],{4137:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),m=l(n),d=a,f=m["".concat(s,".").concat(d)]||m[d]||c[d]||i;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:a,o[1]=p;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6059:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>p,toc:()=>l});var r=n(7462),a=(n(7294),n(4137));const i={sidebar_position:9},o="Exhaust scripts",p={unversionedId:"major-concepts/exhaust-script",id:"major-concepts/exhaust-script",title:"Exhaust scripts",description:"Exhaust scripts are scripts that can run independently of IF itself that take an executed IMP file (one with outputs) as an input, parse the yaml data and reformat it into some other representation. We provide if-csv bundled with IF, but if you want other data formats, you'll have to create an exhaust script yourself.",source:"@site/docs/major-concepts/exhaust-script.md",sourceDirName:"major-concepts",slug:"/major-concepts/exhaust-script",permalink:"/major-concepts/exhaust-script",draft:!1,editUrl:"https://github.com/Green-Software-Foundation/if-docs/edit/master/docs/major-concepts/exhaust-script.md",tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9},sidebar:"tutorialSidebar",previous:{title:"Pipelines",permalink:"/major-concepts/pipelines"},next:{title:"Users",permalink:"/users/"}},s={},l=[{value:"if-run",id:"if-run",level:2},{value:"How to Use if-run",id:"how-to-use-if-run",level:3},{value:"if-csv",id:"if-csv",level:2}],u={toc:l};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"exhaust-scripts"},"Exhaust scripts"),(0,a.kt)("p",null,"Exhaust scripts are scripts that can run independently of IF itself that take an executed IMP file (one with ",(0,a.kt)("inlineCode",{parentName:"p"},"outputs"),") as an input, parse the yaml data and reformat it into some other representation. We provide ",(0,a.kt)("inlineCode",{parentName:"p"},"if-csv")," bundled with IF, but if you want other data formats, you'll have to create an exhaust script yourself."),(0,a.kt)("h2",{id:"if-run"},"if-run"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"if-run")," isn't really an exhaust script, because it also grabs input data, regroups data, computes the pipeline and aggregates. However, we're mentioning it here because it does have some built-in exhaust functionality. Specifically, ",(0,a.kt)("inlineCode",{parentName:"p"},"if-run")," outputs yaml data. ",(0,a.kt)("inlineCode",{parentName:"p"},"if-run")," can ",(0,a.kt)("em",{parentName:"p"},"only")," output yaml data. This yaml data can be dumped to the console or saved to a yaml file."),(0,a.kt)("h3",{id:"how-to-use-if-run"},"How to Use if-run"),(0,a.kt)("p",null,"To use ",(0,a.kt)("inlineCode",{parentName:"p"},"if-run"),", you need to provide an IMP file in ",(0,a.kt)("inlineCode",{parentName:"p"},"yaml")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"yml")," foramt. The output will be in ",(0,a.kt)("inlineCode",{parentName:"p"},"yaml")," format if you specify the output file path."),(0,a.kt)("p",null,"Here's a simple IMP file example. This IMP sums two components, ",(0,a.kt)("inlineCode",{parentName:"p"},"cpu/energy")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"network/energy")," and assigns the result to ",(0,a.kt)("inlineCode",{parentName:"p"},"energy")," in the outputs array."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"name: sum\ndescription: successful path\ntags:\ninitialize:\n  plugins:\n    sum:\n      method: Sum\n      path: 'builtin'\n      config:\n        input-parameters: ['cpu/energy', 'network/energy']\n        output-parameter: 'energy'\ntree:\n  children:\n    child:\n      pipeline:\n        observe:\n        regroup:\n        compute:\n          - sum\n      inputs:\n        - timestamp: 2023-08-06T00:00\n          duration: 3600\n          cpu/energy: 0.001\n          network/energy: 0.001\n")),(0,a.kt)("p",null,"To execute this IMP with ",(0,a.kt)("inlineCode",{parentName:"p"},"if-run"),", use the following command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"if-run -m sum.yaml -o output-sum\n")),(0,a.kt)("p",null,"You will get the executed IMP in the ",(0,a.kt)("inlineCode",{parentName:"p"},"output-sum.yaml")," file."),(0,a.kt)("h2",{id:"if-csv"},"if-csv"),(0,a.kt)("p",null,"The ",(0,a.kt)("a",{parentName:"p",href:"/users/how-to-export-csv-file-with-if-csv"},(0,a.kt)("inlineCode",{parentName:"a"},"if-csv"))," script allows users to pass in ",(0,a.kt)("inlineCode",{parentName:"p"},"yaml")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"yml")," files created using ",(0,a.kt)("inlineCode",{parentName:"p"},"if-run")," and save the output in ",(0,a.kt)("inlineCode",{parentName:"p"},"csv")," format. You have to define the parameters you want to export from the yaml file, e.g. ",(0,a.kt)("inlineCode",{parentName:"p"},"energy")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"carbon"),"."),(0,a.kt)("p",null,"For the above example, you can get the following result:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"Path,2023-08-06T00:00\ntree.children.child.energy,0.002\n")),(0,a.kt)("p",null,"by running:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"if-csv -m sum.yaml -p energy -o output-sum\n")),(0,a.kt)("p",null,"This command specifies the IMP file (",(0,a.kt)("inlineCode",{parentName:"p"},"sum.yaml"),"), the parameter to export (",(0,a.kt)("inlineCode",{parentName:"p"},"energy"),"), and the output file path (",(0,a.kt)("inlineCode",{parentName:"p"},"output-sum"),")."))}c.isMDXComponent=!0}}]);