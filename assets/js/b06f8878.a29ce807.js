"use strict";(self.webpackChunkgreen_software_training=self.webpackChunkgreen_software_training||[]).push([[411],{4137:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>c});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),m=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=m(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=m(n),c=i,f=d["".concat(s,".").concat(c)]||d[c]||p[c]||r;return n?a.createElement(f,o(o({ref:t},u),{},{components:n})):a.createElement(f,o({ref:t},u))}));function c(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var m=2;m<r;m++)o[m]=n[m];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6177:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>m});var a=n(7462),i=(n(7294),n(4137));const r={},o="WattTime Grid Emissions Model",l={unversionedId:"models/watt-time",id:"models/watt-time",title:"WattTime Grid Emissions Model",description:"Please note Watt-time is a community model, not part of the IF standard library. This means the IF core team are not closely monitoring these models to keep them up to date. You should do your own research before implementing them!",source:"@site/docs/05-models/watt-time.md",sourceDirName:"05-models",slug:"/models/watt-time",permalink:"/models/watt-time",draft:!1,editUrl:"https://github.com/Green-Software-Foundation/TODO/docs/05-models/watt-time.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Teads' CPU Estimation Model",permalink:"/models/teads-cpu"},next:{title:"Tutorials",permalink:"/tutorials/"}},s={},m=[{value:"Introduction",id:"introduction",level:2},{value:"Scope",id:"scope",level:2},{value:"Implementation",id:"implementation",level:2},{value:"Authentication",id:"authentication",level:3},{value:"inputs",id:"inputs",level:3},{value:"Typescript Usage",id:"typescript-usage",level:3},{value:"IMPL Usage",id:"impl-usage",level:3},{value:"Environment Variable based configuration for IMPL",id:"environment-variable-based-configuration-for-impl",level:4},{value:"Static configuration for IMPL",id:"static-configuration-for-impl",level:4}],u={toc:m};function p(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"watttime-grid-emissions-model"},"WattTime Grid Emissions Model"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Please note")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Watt-time")," is a community model, not part of the IF standard library. This means the IF core team are not closely monitoring these models to keep them up to date. You should do your own research before implementing them!"),(0,i.kt)("h2",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"WattTime technology\u2014based on real-time grid data, cutting-edge algorithms, and machine learning\u2014provides first-of-its-kind insight into your local electricity grid\u2019s marginal emissions rate. ",(0,i.kt)("a",{parentName:"p",href:"https://www.watttime.org/api-documentation/#introduction"},"Read More...")),(0,i.kt)("h2",{id:"scope"},"Scope"),(0,i.kt)("p",null,"WattTime Model provides a way to calculate emissions for a given time in a specific location. "),(0,i.kt)("p",null,"The model is based on the WattTime API. The model uses the following inputs:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},'location: Location of the software system (latitude in decimal degrees, longitude in decimal degrees). "latitude,longitude"'),(0,i.kt)("li",{parentName:"ul"},"timestamp: Timestamp of the recorded event (2021-01-01T00:00:00Z) RFC3339"),(0,i.kt)("li",{parentName:"ul"},"duration: Duration of the recorded event in seconds (3600)")),(0,i.kt)("h2",{id:"implementation"},"Implementation"),(0,i.kt)("p",null,"Limitations: "),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Set of inputs are to be within 32 days of each other. "),(0,i.kt)("li",{parentName:"ul"},"Emissions are aggregated for every 5 minutes regardless of the granularity of the inputs.")),(0,i.kt)("h3",{id:"authentication"},"Authentication"),(0,i.kt)("p",null,"WattTime API requires activation of subscription before usage. Please refer to WattTime website for more information.\n",(0,i.kt)("a",{parentName:"p",href:"https://www.watttime.org/get-the-data/data-plans/"},"https://www.watttime.org/get-the-data/data-plans/")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Required Parameters:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'# example environment variable config , prefix the environment variables with "ENV" to load them inside the model.\n# export WATT_TIME_USERNAME=test1\n# export WATT_TIME_PASSWORD=test2\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"username: Username for the WattTime API",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"ENV_WATT_TIME_USERNAME - specifying this value enables the Impact to load the value from the environment variable ",(0,i.kt)("inlineCode",{parentName:"li"},"WATT_TIME_USERNAME")))),(0,i.kt)("li",{parentName:"ul"},"password: Password for the WattTime API",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"ENV_WATT_TIME_PASSWORD - specifying this value enables the Impact to load the value from the environment variable ",(0,i.kt)("inlineCode",{parentName:"li"},"WATT_TIME_PASSWORD"))))),(0,i.kt)("h3",{id:"inputs"},"inputs"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Required Parameters:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"timestamp: Timestamp of the recorded event (2021-01-01T00:00:00Z) RFC3339"),(0,i.kt)("li",{parentName:"ul"},'location: Location of the software system (latitude in decimal degrees, longitude in decimal degrees). "latitude,longitude"'),(0,i.kt)("li",{parentName:"ul"},"duration: Duration of the recorded event in seconds (3600)")),(0,i.kt)("h3",{id:"typescript-usage"},"Typescript Usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"// environment variable configuration\n// export WATT_TIME_USERNAME=test1\n// export WATT_TIME_PASSWORD=test2\n// use environment variables to configure the model\nconst env_model = await new WattTimeGridEmissions().configure('watt-time', {\n  username: process.env.WATT_TIME_USERNAME,\n  password: process.env.WATT_TIME_PASSWORD,\n});\nconst inputs = [\n  {\n    timestamp: '2021-01-01T00:00:00Z',\n    latitude: \"43.22,-80.22\",\n    duration: 3600,\n  },\n];\nconst results = env_model.calculateEmissions(inputs);\n")),(0,i.kt)("h3",{id:"impl-usage"},"IMPL Usage"),(0,i.kt)("h4",{id:"environment-variable-based-configuration-for-impl"},"Environment Variable based configuration for IMPL"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'# environment variable config , prefix the environment variables with "ENV" to load them inside the model.  \n# export WATT_TIME_USERNAME=test1\n# export WATT_TIME_PASSWORD=test2\nconfig:\n  username: ENV_WATT_TIME_USERNAME\n  password: ENV_WATT_TIME_PASSWORD\ninputs:\n  - timestamp: 2021-01-01T00:00:00Z\n    latitude: "43.22,-80.22"\n    duration: 3600\n')),(0,i.kt)("h4",{id:"static-configuration-for-impl"},"Static configuration for IMPL"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'config:\n  username: username\n  password: password\ninputs:\n  - timestamp: 2021-01-01T00:00:00Z\n    latitude: "43.22,-80.22"\n    duration: 3600\n')))}p.isMDXComponent=!0}}]);