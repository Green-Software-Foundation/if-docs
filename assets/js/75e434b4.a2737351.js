"use strict";(self.webpackChunkgreen_software_training=self.webpackChunkgreen_software_training||[]).push([[229],{4137:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=u(n),f=i,d=m["".concat(p,".").concat(f)]||m[f]||c[f]||a;return n?r.createElement(d,o(o({ref:t},s),{},{components:n})):r.createElement(d,o({ref:t},s))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var u=2;u<a;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9059:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var r=n(7462),i=(n(7294),n(4137));const a={},o="Plugins",l={unversionedId:"reference/plugins",id:"reference/plugins",title:"Plugins",description:"Impact Framework works by executing pipelines of plugins over input data. Those plugins are re-useable units of code that can be thought of as Lego bricks - simple blocks of code that can be assembled into complex workflows.",source:"@site/docs/reference/plugins.md",sourceDirName:"reference",slug:"/reference/plugins",permalink:"/reference/plugins",draft:!1,editUrl:"https://github.com/Green-Software-Foundation/if-docs/edit/master/docs/reference/plugins.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"IF features",permalink:"/reference/features"},next:{title:"FAQs",permalink:"/FAQ"}},p={},u=[{value:"<code>built-in</code>",id:"built-in",level:3}],s={toc:u};function c(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"plugins"},"Plugins"),(0,i.kt)("p",null,"Impact Framework works by executing pipelines of plugins over input data. Those plugins are re-useable units of code that can be thought of as Lego bricks - simple blocks of code that can be assembled into complex workflows."),(0,i.kt)("p",null,"IF comes bundled with a standard library of ",(0,i.kt)("inlineCode",{parentName:"p"},"builtins")," that allow you to do basic and/or generic operations over your data. These include simple arithmetic, regrouping data, calculating SCI scores, and running processes in a spawned shell."),(0,i.kt)("p",null,"Most IF plugins are created and maintained by the community. Anyone can create a plugin and share it so that other iF users can install it and use it in their pipelines."),(0,i.kt)("p",null,"We provide a website where you can search for plugins:"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://explorer.if.greensoftware.foundation"},"IF Explorer")),(0,i.kt)("p",null,"You can also add your own plugins to the Explorer using this ",(0,i.kt)("a",{parentName:"p",href:"https://wiki.greensoftware.foundation/how-to-add-plugins"},"form"),"."),(0,i.kt)("h3",{id:"built-in"},(0,i.kt)("inlineCode",{parentName:"h3"},"built-in")),(0,i.kt)("p",null,"IF builtins all come bundled with IF. Below you will find a list of each builtin along with a brief description of its purpose and a link to its README documentation."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/Green-Software-Foundation/if/tree/main/src/if-run/builtins/time-sync"},"Time Sync"),": Takes a heterogeneous set of time series data that might be offset, discontinuous or irregularly spaces and returns time series conforming to a user defined time grid. E.g. a user can define that all sets of observations should start at some global start time, end at some global end time and have a specific temporal resolution.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/Green-Software-Foundation/if/tree/main/src/if-run/builtins/sci-embodied"},"SCI-embodied")," - Calculates the embodied carbon for a component.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/Green-Software-Foundation/if/tree/main/src/if-run/builtins/sci"},"SCI"),": Calculates the software carbon intensity.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/Green-Software-Foundation/if/tree/main/src/if-run/builtins/shell"},"Shell")," - A plugin that enables external code in any language to be run in a child process.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/Green-Software-Foundation/if/tree/main/src/if-run/builtins/sum"},"Sum"),": a generic arithmetic plugin that allows you to sum any set of input parameters.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/Green-Software-Foundation/if/tree/main/src/if-run/builtins/multiply"},"Multiply"),": a generic arithmetic plugin that allows you to multiply any set of input parameters.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/Green-Software-Foundation/if/tree/main/src/if-run/builtins/coefficient"},"Coefficient"),": a generic arithmetic plugin that allows you to multiply any input value by a coefficient.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/Green-Software-Foundation/if/tree/main/src/if-run/builtins/mock-observations"},"Mock Observations"),": A plugin for mocking observations (inputs) for testing and demo purposes.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/Green-Software-Foundation/if/tree/main/src/if-run/builtins/subtract"},"Subtract"),": a generic plugin for subtracting one value from another.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/Green-Software-Foundation/if/tree/main/src/if-run/builtins/divide"},"Divide"),": A generic plugin for doing arithmetic division of two values.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/Green-Software-Foundation/if/tree/main/src/if-run/builtins/regex"},"Regex"),": A generic plugin to match part of one string and extract it into another.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/Green-Software-Foundation/if/tree/main/src/if-run/builtins/exponent"},"Exponent"),": A generic plugin for raising a value to a power.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/Green-Software-Foundation/if/tree/main/src/if-run/builtins/interpolation"},"Interpolation"),": A generic plugin for interpolating between known points.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/Green-Software-Foundation/if/tree/main/src/if-run/builtins/copy-param"},"Copy Param"),": A generic plugin for copying a parameter to a new element in the input array, optionally deleting the original. Useful as a way to rename parameters.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/Green-Software-Foundation/if/tree/main/src/if-run/builtins/csv-lookup"},"CSV lookup"),": A generic plugin for querying data from CSV files.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/Green-Software-Foundation/if/tree/main/src/if-run/builtins/time-converter"},"Time Converter"),": A generic plugin for converting time unit of energy value to another time unit."))))}c.isMDXComponent=!0}}]);